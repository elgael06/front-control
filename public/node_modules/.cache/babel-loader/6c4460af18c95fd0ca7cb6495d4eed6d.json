{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nexport var DestinationType;\n\n(function (DestinationType) {\n  DestinationType[DestinationType[\"DATA_URL\"] = 0] = \"DATA_URL\";\n  DestinationType[DestinationType[\"FILE_URL\"] = 1] = \"FILE_URL\";\n  DestinationType[DestinationType[\"NATIVE_URI\"] = 2] = \"NATIVE_URI\";\n})(DestinationType || (DestinationType = {}));\n\nexport var EncodingType;\n\n(function (EncodingType) {\n  EncodingType[EncodingType[\"JPEG\"] = 0] = \"JPEG\";\n  EncodingType[EncodingType[\"PNG\"] = 1] = \"PNG\";\n})(EncodingType || (EncodingType = {}));\n\nexport var MediaType;\n\n(function (MediaType) {\n  MediaType[MediaType[\"PICTURE\"] = 0] = \"PICTURE\";\n  MediaType[MediaType[\"VIDEO\"] = 1] = \"VIDEO\";\n  MediaType[MediaType[\"ALLMEDIA\"] = 2] = \"ALLMEDIA\";\n})(MediaType || (MediaType = {}));\n\nexport var PictureSourceType;\n\n(function (PictureSourceType) {\n  PictureSourceType[PictureSourceType[\"PHOTOLIBRARY\"] = 0] = \"PHOTOLIBRARY\";\n  PictureSourceType[PictureSourceType[\"CAMERA\"] = 1] = \"CAMERA\";\n  PictureSourceType[PictureSourceType[\"SAVEDPHOTOALBUM\"] = 2] = \"SAVEDPHOTOALBUM\";\n})(PictureSourceType || (PictureSourceType = {}));\n\nexport var PopoverArrowDirection;\n\n(function (PopoverArrowDirection) {\n  PopoverArrowDirection[PopoverArrowDirection[\"ARROW_UP\"] = 1] = \"ARROW_UP\";\n  PopoverArrowDirection[PopoverArrowDirection[\"ARROW_DOWN\"] = 2] = \"ARROW_DOWN\";\n  PopoverArrowDirection[PopoverArrowDirection[\"ARROW_LEFT\"] = 3] = \"ARROW_LEFT\";\n  PopoverArrowDirection[PopoverArrowDirection[\"ARROW_RIGHT\"] = 4] = \"ARROW_RIGHT\";\n  PopoverArrowDirection[PopoverArrowDirection[\"ARROW_ANY\"] = 5] = \"ARROW_ANY\";\n})(PopoverArrowDirection || (PopoverArrowDirection = {}));\n\nexport var Direction;\n\n(function (Direction) {\n  Direction[Direction[\"BACK\"] = 0] = \"BACK\";\n  Direction[Direction[\"FRONT\"] = 1] = \"FRONT\";\n})(Direction || (Direction = {}));\n\nvar CameraOriginal =\n/** @class */\nfunction (_super) {\n  __extends(CameraOriginal, _super);\n\n  function CameraOriginal() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Constant for possible destination types\n     */\n\n\n    _this.DestinationType = {\n      /** Return base64 encoded string. DATA_URL can be very memory intensive and cause app crashes or out of memory errors. Use FILE_URI or NATIVE_URI if possible */\n      DATA_URL: 0,\n\n      /** Return file uri (content://media/external/images/media/2 for Android) */\n      FILE_URI: 1,\n\n      /** Return native uri (eg. asset-library://... for iOS) */\n      NATIVE_URI: 2\n    };\n    /**\n     * Convenience constant\n     */\n\n    _this.EncodingType = {\n      /** Return JPEG encoded image */\n      JPEG: 0,\n\n      /** Return PNG encoded image */\n      PNG: 1\n    };\n    /**\n     * Convenience constant\n     */\n\n    _this.MediaType = {\n      /** Allow selection of still pictures only. DEFAULT. Will return format specified via DestinationType */\n      PICTURE: 0,\n\n      /** Allow selection of video only, ONLY RETURNS URL */\n      VIDEO: 1,\n\n      /** Allow selection from all media types */\n      ALLMEDIA: 2\n    };\n    /**\n     * Convenience constant\n     */\n\n    _this.PictureSourceType = {\n      /** Choose image from picture library (same as PHOTOLIBRARY for Android) */\n      PHOTOLIBRARY: 0,\n\n      /** Take picture from camera */\n      CAMERA: 1,\n\n      /** Choose image from picture library (same as SAVEDPHOTOALBUM for Android) */\n      SAVEDPHOTOALBUM: 2\n    };\n    /**\n     * Convenience constant\n     */\n\n    _this.PopoverArrowDirection = {\n      ARROW_UP: 1,\n      ARROW_DOWN: 2,\n      ARROW_LEFT: 4,\n      ARROW_RIGHT: 8,\n      ARROW_ANY: 15\n    };\n    /**\n     * Convenience constant\n     */\n\n    _this.Direction = {\n      /** Use the back-facing camera */\n      BACK: 0,\n\n      /** Use the front-facing camera */\n      FRONT: 1\n    };\n    return _this;\n  }\n\n  CameraOriginal.prototype.getPicture = function (options) {\n    return cordova(this, \"getPicture\", {\n      \"callbackOrder\": \"reverse\"\n    }, arguments);\n  };\n\n  CameraOriginal.prototype.cleanup = function () {\n    return cordova(this, \"cleanup\", {\n      \"platforms\": [\"iOS\"]\n    }, arguments);\n  };\n\n  CameraOriginal.pluginName = \"Camera\";\n  CameraOriginal.plugin = \"cordova-plugin-camera\";\n  CameraOriginal.pluginRef = \"navigator.camera\";\n  CameraOriginal.repo = \"https://github.com/apache/cordova-plugin-camera\";\n  CameraOriginal.platforms = [\"Android\", \"Browser\", \"iOS\", \"Windows\"];\n  return CameraOriginal;\n}(IonicNativePlugin);\n\nvar Camera = new CameraOriginal();\nexport { Camera };","map":{"version":3,"sources":["../../../../src/@ionic-native/plugins/camera/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport interface CameraOptions {\n  /** Picture quality in range 0-100. Default is 50 */\n  quality?: number;\n  /**\n   * Choose the format of the return value.\n   * Defined in Camera.DestinationType. Default is FILE_URI.\n   *      DATA_URL : 0,   Return image as base64-encoded string (DATA_URL can be very memory intensive and cause app crashes or out of memory errors. Use FILE_URI or NATIVE_URI if possible),\n   *      FILE_URI : 1,   Return image file URI,\n   *      NATIVE_URI : 2  Return image native URI\n   *          (e.g., assets-library:// on iOS or content:// on Android)\n   */\n  destinationType?: number;\n  /**\n   * Set the source of the picture.\n   * Defined in Camera.PictureSourceType. Default is CAMERA.\n   *      PHOTOLIBRARY : 0,\n   *      CAMERA : 1,\n   *      SAVEDPHOTOALBUM : 2\n   */\n  sourceType?: number;\n  /** Allow simple editing of image before selection. */\n  allowEdit?: boolean;\n  /**\n   * Choose the returned image file's encoding.\n   * Defined in Camera.EncodingType. Default is JPEG\n   *      JPEG : 0    Return JPEG encoded image\n   *      PNG : 1     Return PNG encoded image\n   */\n  encodingType?: number;\n  /**\n   * Width in pixels to scale image. Must be used with targetHeight.\n   * Aspect ratio remains constant.\n   */\n  targetWidth?: number;\n  /**\n   * Height in pixels to scale image. Must be used with targetWidth.\n   * Aspect ratio remains constant.\n   */\n  targetHeight?: number;\n  /**\n   * Set the type of media to select from. Only works when PictureSourceType\n   * is PHOTOLIBRARY or SAVEDPHOTOALBUM. Defined in Camera.MediaType\n   *      PICTURE: 0      allow selection of still pictures only. DEFAULT.\n   *          Will return format specified via DestinationType\n   *      VIDEO: 1        allow selection of video only, WILL ALWAYS RETURN FILE_URI\n   *      ALLMEDIA : 2    allow selection from all media types\n   */\n  mediaType?: number;\n  /** Rotate the image to correct for the orientation of the device during capture. */\n  correctOrientation?: boolean;\n  /** Save the image to the photo album on the device after capture. */\n  saveToPhotoAlbum?: boolean;\n  /**\n   * Choose the camera to use (front- or back-facing).\n   * Defined in Camera.Direction. Default is BACK.\n   *      BACK: 0\n   *      FRONT: 1\n   */\n  cameraDirection?: number;\n  /** iOS-only options that specify popover location in iPad. Defined in CameraPopoverOptions. */\n  popoverOptions?: CameraPopoverOptions;\n}\n\n/**\n * iOS-only parameters that specify the anchor element location and arrow direction\n * of the popover when selecting images from an iPad's library or album.\n */\nexport interface CameraPopoverOptions {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  /**\n   * Direction the arrow on the popover should point. Defined in Camera.PopoverArrowDirection\n   * Matches iOS UIPopoverArrowDirection constants.\n   *      ARROW_UP : 1,\n   *      ARROW_DOWN : 2,\n   *      ARROW_LEFT : 4,\n   *      ARROW_RIGHT : 8,\n   *      ARROW_ANY : 15\n   */\n  arrowDir: number;\n}\n\nexport enum DestinationType {\n  DATA_URL = 0,\n  FILE_URL,\n  NATIVE_URI,\n}\n\nexport enum EncodingType {\n  JPEG = 0,\n  PNG,\n}\n\nexport enum MediaType {\n  PICTURE = 0,\n  VIDEO,\n  ALLMEDIA,\n}\n\nexport enum PictureSourceType {\n  PHOTOLIBRARY = 0,\n  CAMERA,\n  SAVEDPHOTOALBUM,\n}\n\nexport enum PopoverArrowDirection {\n  ARROW_UP = 1,\n  ARROW_DOWN,\n  ARROW_LEFT,\n  ARROW_RIGHT,\n  ARROW_ANY,\n}\n\nexport enum Direction {\n  BACK = 0,\n  FRONT,\n}\n\n/**\n * @name Camera\n * @premier camera\n * @description\n * Take a photo or capture video.\n *\n * Requires the Cordova plugin: `cordova-plugin-camera`. For more info, please see the [Cordova Camera Plugin Docs](https://github.com/apache/cordova-plugin-camera).\n *\n * [Warning] Since IOS 10 the camera requires permissions to be placed in your config.xml add\n * ```xml\n * <config-file parent=\"NSCameraUsageDescription\" platform=\"ios\" target=\"*-Info.plist\">\n *  <string>You can take photos</string>\n * </config-file>\n * ```\n * inside of the <platform name='ios> section\n *\n * @usage\n * ```typescript\n * import { Camera, CameraOptions } from '@ionic-native/camera/ngx';\n *\n * constructor(private camera: Camera) { }\n *\n * ...\n *\n *\n * const options: CameraOptions = {\n *   quality: 100,\n *   destinationType: this.camera.DestinationType.FILE_URI,\n *   encodingType: this.camera.EncodingType.JPEG,\n *   mediaType: this.camera.MediaType.PICTURE\n * }\n *\n * this.camera.getPicture(options).then((imageData) => {\n *  // imageData is either a base64 encoded string or a file URI\n *  // If it's base64 (DATA_URL):\n *  let base64Image = 'data:image/jpeg;base64,' + imageData;\n * }, (err) => {\n *  // Handle error\n * });\n * ```\n * @interfaces\n * CameraOptions\n * CameraPopoverOptions\n */\n@Plugin({\n  pluginName: 'Camera',\n  plugin: 'cordova-plugin-camera',\n  pluginRef: 'navigator.camera',\n  repo: 'https://github.com/apache/cordova-plugin-camera',\n  platforms: ['Android', 'Browser', 'iOS', 'Windows'],\n})\n@Injectable()\nexport class Camera extends IonicNativePlugin {\n  /**\n   * Constant for possible destination types\n   */\n  DestinationType = {\n    /** Return base64 encoded string. DATA_URL can be very memory intensive and cause app crashes or out of memory errors. Use FILE_URI or NATIVE_URI if possible */\n    DATA_URL: 0,\n    /** Return file uri (content://media/external/images/media/2 for Android) */\n    FILE_URI: 1,\n    /** Return native uri (eg. asset-library://... for iOS) */\n    NATIVE_URI: 2,\n  };\n\n  /**\n   * Convenience constant\n   */\n  EncodingType = {\n    /** Return JPEG encoded image */\n    JPEG: 0,\n    /** Return PNG encoded image */\n    PNG: 1,\n  };\n\n  /**\n   * Convenience constant\n   */\n  MediaType = {\n    /** Allow selection of still pictures only. DEFAULT. Will return format specified via DestinationType */\n    PICTURE: 0,\n    /** Allow selection of video only, ONLY RETURNS URL */\n    VIDEO: 1,\n    /** Allow selection from all media types */\n    ALLMEDIA: 2,\n  };\n\n  /**\n   * Convenience constant\n   */\n  PictureSourceType = {\n    /** Choose image from picture library (same as PHOTOLIBRARY for Android) */\n    PHOTOLIBRARY: 0,\n    /** Take picture from camera */\n    CAMERA: 1,\n    /** Choose image from picture library (same as SAVEDPHOTOALBUM for Android) */\n    SAVEDPHOTOALBUM: 2,\n  };\n\n  /**\n   * Convenience constant\n   */\n  PopoverArrowDirection = {\n    ARROW_UP: 1,\n    ARROW_DOWN: 2,\n    ARROW_LEFT: 4,\n    ARROW_RIGHT: 8,\n    ARROW_ANY: 15,\n  };\n\n  /**\n   * Convenience constant\n   */\n  Direction = {\n    /** Use the back-facing camera */\n    BACK: 0,\n    /** Use the front-facing camera */\n    FRONT: 1,\n  };\n\n  /**\n   * Take a picture or video, or load one from the library.\n   * @param {CameraOptions} [options] Options that you want to pass to the camera. Encoding type, quality, etc. Platform-specific quirks are described in the [Cordova plugin docs](https://github.com/apache/cordova-plugin-camera#cameraoptions-errata-).\n   * @returns {Promise<any>} Returns a Promise that resolves with Base64 encoding of the image data, or the image file URI, depending on cameraOptions, otherwise rejects with an error.\n   */\n  @Cordova({\n    callbackOrder: 'reverse',\n  })\n  getPicture(options?: CameraOptions): Promise<any> {\n    return;\n  }\n\n  /**\n   * Remove intermediate image files that are kept in temporary storage after calling camera.getPicture.\n   * Applies only when the value of Camera.sourceType equals Camera.PictureSourceType.CAMERA and the Camera.destinationType equals Camera.DestinationType.FILE_URI.\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS'],\n  })\n  cleanup(): Promise<any> {\n    return;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}