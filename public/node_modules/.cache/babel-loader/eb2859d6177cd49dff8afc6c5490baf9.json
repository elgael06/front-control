{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.oned {*/\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar Code39Reader_1 = require(\"./Code39Reader\");\n\nvar Code128Reader_1 = require(\"./Code128Reader\");\n\nvar RSS14Reader_1 = require(\"./rss/RSS14Reader\");\n\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\n\nvar ITFReader_1 = require(\"./ITFReader\");\n\nvar MultiFormatUPCEANReader_1 = require(\"./MultiFormatUPCEANReader\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n\nvar OneDReader_1 = require(\"./OneDReader\");\n/**\n * @author Daniel Switkin <dswitkin@google.com>\n * @author Sean Owen\n */\n\n\nvar MultiFormatOneDReader =\n/** @class */\nfunction (_super) {\n  __extends(MultiFormatOneDReader, _super);\n\n  function MultiFormatOneDReader(hints) {\n    var _this = _super.call(this) || this;\n\n    _this.readers = [];\n    var possibleFormats = !hints ? null : hints.get(DecodeHintType_1.default.POSSIBLE_FORMATS);\n    var useCode39CheckDigit = hints && hints.get(DecodeHintType_1.default.ASSUME_CODE_39_CHECK_DIGIT) !== undefined;\n\n    if (possibleFormats) {\n      if (possibleFormats.includes(BarcodeFormat_1.default.EAN_13) || possibleFormats.includes(BarcodeFormat_1.default.EAN_8)) {\n        _this.readers.push(new MultiFormatUPCEANReader_1.default(hints));\n      } // if (possibleFormats.includes(BarcodeFormat.EAN_13) ||\n      //     possibleFormats.includes(BarcodeFormat.UPC_A) ||\n      //     possibleFormats.includes(BarcodeFormat.EAN_8) ||\n      //     possibleFormats.includes(BarcodeFormat.UPC_E)) {\n      //   readers.push(new MultiFormatUPCEANReader(hints));\n      // }\n\n\n      if (possibleFormats.includes(BarcodeFormat_1.default.CODE_39)) {\n        _this.readers.push(new Code39Reader_1.default(useCode39CheckDigit));\n      } // if (possibleFormats.includes(BarcodeFormat.CODE_93)) {\n      //    this.readers.push(new Code93Reader());\n      // }\n\n\n      if (possibleFormats.includes(BarcodeFormat_1.default.CODE_128)) {\n        _this.readers.push(new Code128Reader_1.default());\n      }\n\n      if (possibleFormats.includes(BarcodeFormat_1.default.ITF)) {\n        _this.readers.push(new ITFReader_1.default());\n      } // if (possibleFormats.includes(BarcodeFormat.CODABAR)) {\n      //    this.readers.push(new CodaBarReader());\n      // }\n\n\n      if (possibleFormats.includes(BarcodeFormat_1.default.RSS_14)) {\n        _this.readers.push(new RSS14Reader_1.default());\n      } // if (possibleFormats.includes(BarcodeFormat.RSS_EXPANDED)) {\n      //   this.readers.push(new RSSExpandedReader());\n      // }\n\n    }\n\n    if (_this.readers.length === 0) {\n      // this.readers.push(new MultiFormatUPCEANReader(hints));\n      _this.readers.push(new Code39Reader_1.default()); // this.readers.push(new CodaBarReader());\n      // this.readers.push(new Code93Reader());\n\n\n      _this.readers.push(new MultiFormatUPCEANReader_1.default(hints));\n\n      _this.readers.push(new Code128Reader_1.default());\n\n      _this.readers.push(new ITFReader_1.default());\n\n      _this.readers.push(new RSS14Reader_1.default()); // this.readers.push(new RSSExpandedReader());\n\n    }\n\n    return _this;\n  } // @Override\n\n\n  MultiFormatOneDReader.prototype.decodeRow = function (rowNumber, row, hints) {\n    for (var i = 0; i < this.readers.length; i++) {\n      try {\n        return this.readers[i].decodeRow(rowNumber, row, hints);\n      } catch (re) {// continue\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  }; // @Override\n\n\n  MultiFormatOneDReader.prototype.reset = function () {\n    this.readers.forEach(function (reader) {\n      return reader.reset();\n    });\n  };\n\n  return MultiFormatOneDReader;\n}(OneDReader_1.default);\n\nexports.default = MultiFormatOneDReader;","map":{"version":3,"sources":["../../../src/core/oned/MultiFormatOneDReader.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*namespace com.google.zxing.oned {*/\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\nvar Code39Reader_1 = require(\"./Code39Reader\");\nvar Code128Reader_1 = require(\"./Code128Reader\");\nvar RSS14Reader_1 = require(\"./rss/RSS14Reader\");\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\nvar ITFReader_1 = require(\"./ITFReader\");\nvar MultiFormatUPCEANReader_1 = require(\"./MultiFormatUPCEANReader\");\nvar NotFoundException_1 = require(\"../NotFoundException\");\nvar OneDReader_1 = require(\"./OneDReader\");\n/**\n * @author Daniel Switkin <dswitkin@google.com>\n * @author Sean Owen\n */\nvar MultiFormatOneDReader = /** @class */ (function (_super) {\n    __extends(MultiFormatOneDReader, _super);\n    function MultiFormatOneDReader(hints) {\n        var _this = _super.call(this) || this;\n        _this.readers = [];\n        var possibleFormats = !hints ? null : hints.get(DecodeHintType_1.default.POSSIBLE_FORMATS);\n        var useCode39CheckDigit = hints && hints.get(DecodeHintType_1.default.ASSUME_CODE_39_CHECK_DIGIT) !== undefined;\n        if (possibleFormats) {\n            if (possibleFormats.includes(BarcodeFormat_1.default.EAN_13) ||\n                possibleFormats.includes(BarcodeFormat_1.default.EAN_8)) {\n                _this.readers.push(new MultiFormatUPCEANReader_1.default(hints));\n            }\n            // if (possibleFormats.includes(BarcodeFormat.EAN_13) ||\n            //     possibleFormats.includes(BarcodeFormat.UPC_A) ||\n            //     possibleFormats.includes(BarcodeFormat.EAN_8) ||\n            //     possibleFormats.includes(BarcodeFormat.UPC_E)) {\n            //   readers.push(new MultiFormatUPCEANReader(hints));\n            // }\n            if (possibleFormats.includes(BarcodeFormat_1.default.CODE_39)) {\n                _this.readers.push(new Code39Reader_1.default(useCode39CheckDigit));\n            }\n            // if (possibleFormats.includes(BarcodeFormat.CODE_93)) {\n            //    this.readers.push(new Code93Reader());\n            // }\n            if (possibleFormats.includes(BarcodeFormat_1.default.CODE_128)) {\n                _this.readers.push(new Code128Reader_1.default());\n            }\n            if (possibleFormats.includes(BarcodeFormat_1.default.ITF)) {\n                _this.readers.push(new ITFReader_1.default());\n            }\n            // if (possibleFormats.includes(BarcodeFormat.CODABAR)) {\n            //    this.readers.push(new CodaBarReader());\n            // }\n            if (possibleFormats.includes(BarcodeFormat_1.default.RSS_14)) {\n                _this.readers.push(new RSS14Reader_1.default());\n            }\n            // if (possibleFormats.includes(BarcodeFormat.RSS_EXPANDED)) {\n            //   this.readers.push(new RSSExpandedReader());\n            // }\n        }\n        if (_this.readers.length === 0) {\n            // this.readers.push(new MultiFormatUPCEANReader(hints));\n            _this.readers.push(new Code39Reader_1.default());\n            // this.readers.push(new CodaBarReader());\n            // this.readers.push(new Code93Reader());\n            _this.readers.push(new MultiFormatUPCEANReader_1.default(hints));\n            _this.readers.push(new Code128Reader_1.default());\n            _this.readers.push(new ITFReader_1.default());\n            _this.readers.push(new RSS14Reader_1.default());\n            // this.readers.push(new RSSExpandedReader());\n        }\n        return _this;\n    }\n    // @Override\n    MultiFormatOneDReader.prototype.decodeRow = function (rowNumber, row, hints) {\n        for (var i = 0; i < this.readers.length; i++) {\n            try {\n                return this.readers[i].decodeRow(rowNumber, row, hints);\n            }\n            catch (re) {\n                // continue\n            }\n        }\n        throw new NotFoundException_1.default();\n    };\n    // @Override\n    MultiFormatOneDReader.prototype.reset = function () {\n        this.readers.forEach(function (reader) { return reader.reset(); });\n    };\n    return MultiFormatOneDReader;\n}(OneDReader_1.default));\nexports.default = MultiFormatOneDReader;\n//# sourceMappingURL=MultiFormatOneDReader.js.map"]},"metadata":{},"sourceType":"script"}