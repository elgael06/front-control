{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DefaultGridSampler_1 = require(\"./DefaultGridSampler\");\n\nvar GridSamplerInstance =\n/** @class */\nfunction () {\n  function GridSamplerInstance() {}\n  /**\n   * Sets the implementation of GridSampler used by the library. One global\n   * instance is stored, which may sound problematic. But, the implementation provided\n   * ought to be appropriate for the entire platform, and all uses of this library\n   * in the whole lifetime of the JVM. For instance, an Android activity can swap in\n   * an implementation that takes advantage of native platform libraries.\n   *\n   * @param newGridSampler The platform-specific object to install.\n   */\n\n\n  GridSamplerInstance.setGridSampler = function (newGridSampler) {\n    GridSamplerInstance.gridSampler = newGridSampler;\n  };\n  /**\n   * @return the current implementation of GridSampler\n   */\n\n\n  GridSamplerInstance.getInstance = function () {\n    return GridSamplerInstance.gridSampler;\n  };\n\n  GridSamplerInstance.gridSampler = new DefaultGridSampler_1.default();\n  return GridSamplerInstance;\n}();\n\nexports.default = GridSamplerInstance;","map":{"version":3,"sources":["../../../src/core/common/GridSamplerInstance.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAEA,IAAA,mBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,mBAAA,GAAA,CAwBC;AApBG;;;;;;;;AAQG;;;AACW,EAAA,mBAAA,CAAA,cAAA,GAAd,UAA6B,cAA7B,EAAwD;AACpD,IAAA,mBAAmB,CAAC,WAApB,GAAkC,cAAlC;AACH,GAFa;AAId;;AAEG;;;AACW,EAAA,mBAAA,CAAA,WAAA,GAAd,YAAA;AACI,WAAO,mBAAmB,CAAC,WAA3B;AACH,GAFa;;AAlBC,EAAA,mBAAA,CAAA,WAAA,GAA2B,IAAI,oBAAA,CAAA,OAAJ,EAA3B;AAsBnB,SAAA,mBAAA;AAAC,CAxBD,EAAA;;kBAAqB,mB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DefaultGridSampler_1 = require(\"./DefaultGridSampler\");\nvar GridSamplerInstance = /** @class */ (function () {\n    function GridSamplerInstance() {\n    }\n    /**\n     * Sets the implementation of GridSampler used by the library. One global\n     * instance is stored, which may sound problematic. But, the implementation provided\n     * ought to be appropriate for the entire platform, and all uses of this library\n     * in the whole lifetime of the JVM. For instance, an Android activity can swap in\n     * an implementation that takes advantage of native platform libraries.\n     *\n     * @param newGridSampler The platform-specific object to install.\n     */\n    GridSamplerInstance.setGridSampler = function (newGridSampler) {\n        GridSamplerInstance.gridSampler = newGridSampler;\n    };\n    /**\n     * @return the current implementation of GridSampler\n     */\n    GridSamplerInstance.getInstance = function () {\n        return GridSamplerInstance.gridSampler;\n    };\n    GridSamplerInstance.gridSampler = new DefaultGridSampler_1.default();\n    return GridSamplerInstance;\n}());\nexports.default = GridSamplerInstance;\n//# sourceMappingURL=GridSamplerInstance.js.map"]},"metadata":{},"sourceType":"script"}