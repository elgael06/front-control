{"ast":null,"code":"var _jsxFileName = \"/home/gael/development/base-back-end/frontend/src/components/util/Scanner.jsx\";\nimport React, { Component } from 'react';\nimport Quagga from 'quagga';\nimport BarcodeReader from 'react-barcode-reader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Scanner extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this._onDetected = result => {\n      this.props.onDetected(result);\n    };\n  }\n\n  componentDidMount() {\n    Quagga.init({\n      inputStream: {\n        type: 'LiveStream',\n        constraints: {\n          width: 640,\n          height: 280 // facingMode: 'auto', // or user\n\n        }\n      },\n      constraints: {\n        facingMode: \"environment\",\n        deviceId: \"7832475934759384534\"\n      },\n      // locator: {\n      //   patchSize: 'medium',\n      //   halfSample: true,\n      // },\n      // numOfWorkers: 4,\n      decoder: {\n        readers: ['code_128_reader']\n      },\n      area: {\n        // defines rectangle of the detection/localization area\n        top: \"0%\",\n        // top offset\n        right: \"0%\",\n        // right offset\n        left: \"0%\",\n        // left offset\n        bottom: \"0%\" // bottom offset\n\n      },\n      debug: {\n        drawBoundingBox: false,\n        showFrequency: false,\n        drawScanline: false,\n        showPattern: false\n      },\n      multiple: false,\n      singleChannel: false // locate: true,\n\n    }, function (err) {\n      if (err) {\n        return console.log(err);\n      }\n\n      Quagga.start();\n    });\n    Quagga.onDetected(this._onDetected);\n  }\n\n  componentWillUnmount() {\n    console.log('dismont scaner...');\n    Quagga.offDetected(this._onDetected);\n    Quagga.close;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"interactive\",\n        className: \"viewport\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(BarcodeReader, {\n        onError: err => console.log(`err`, err),\n        onScan: err => alert(`code `, err)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Scanner;","map":{"version":3,"sources":["/home/gael/development/base-back-end/frontend/src/components/util/Scanner.jsx"],"names":["React","Component","Quagga","BarcodeReader","Scanner","_onDetected","result","props","onDetected","componentDidMount","init","inputStream","type","constraints","width","height","facingMode","deviceId","decoder","readers","area","top","right","left","bottom","debug","drawBoundingBox","showFrequency","drawScanline","showPattern","multiple","singleChannel","err","console","log","start","componentWillUnmount","offDetected","close","render","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAwD9BI,WAxD8B,GAwDhBC,MAAM,IAAI;AACtB,WAAKC,KAAL,CAAWC,UAAX,CAAsBF,MAAtB;AACD,KA1D6B;AAAA;;AAC9BG,EAAAA,iBAAiB,GAAG;AAClBP,IAAAA,MAAM,CAACQ,IAAP,CACE;AACEC,MAAAA,WAAW,EAAE;AACXC,QAAAA,IAAI,EAAE,YADK;AAEXC,QAAAA,WAAW,EAAE;AACXC,UAAAA,KAAK,EAAE,GADI;AAEXC,UAAAA,MAAM,EAAE,GAFG,CAGX;;AAHW;AAFF,OADf;AASEF,MAAAA,WAAW,EAAE;AACXG,QAAAA,UAAU,EAAE,aADD;AAEXC,QAAAA,QAAQ,EAAE;AAFC,OATf;AAaE;AACA;AACA;AACA;AACA;AACAC,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE,CAAC,iBAAD;AADF,OAlBX;AAqBEC,MAAAA,IAAI,EAAE;AAAE;AACNC,QAAAA,GAAG,EAAE,IADD;AACU;AACdC,QAAAA,KAAK,EAAE,IAFH;AAEU;AACdC,QAAAA,IAAI,EAAE,IAHF;AAGU;AACdC,QAAAA,MAAM,EAAE,IAJJ,CAIU;;AAJV,OArBR;AA2BEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,eAAe,EAAE,KADZ;AAELC,QAAAA,aAAa,EAAE,KAFV;AAGLC,QAAAA,YAAY,EAAE,KAHT;AAILC,QAAAA,WAAW,EAAE;AAJR,OA3BT;AAiCAC,MAAAA,QAAQ,EAAE,KAjCV;AAkCEC,MAAAA,aAAa,EAAE,KAlCjB,CAmCE;;AAnCF,KADF,EAsCE,UAASC,GAAT,EAAc;AACZ,UAAIA,GAAJ,EAAS;AACP,eAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AACD;;AACD9B,MAAAA,MAAM,CAACiC,KAAP;AACD,KA3CH;AA6CAjC,IAAAA,MAAM,CAACM,UAAP,CAAkB,KAAKH,WAAvB;AACD;;AAED+B,EAAAA,oBAAoB,GAAG;AACrBH,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAhC,IAAAA,MAAM,CAACmC,WAAP,CAAmB,KAAKhC,WAAxB;AACAH,IAAAA,MAAM,CAACoC,KAAP;AACD;;AAMDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,8BACL;AAAK,QAAA,EAAE,EAAC,aAAR;AAAsB,QAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,cADK,eAGL,QAAC,aAAD;AACE,QAAA,OAAO,EAAEP,GAAG,IAAEC,OAAO,CAACC,GAAR,CAAa,KAAb,EAAmBF,GAAnB,CADhB;AAEE,QAAA,MAAM,EAAEA,GAAG,IAAEQ,KAAK,CAAE,OAAF,EAAUR,GAAV;AAFpB;AAAA;AAAA;AAAA;AAAA,cAHK;AAAA,oBAAP;AAQD;;AArE6B;;AAwEhC,eAAe5B,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport Quagga from 'quagga';\nimport BarcodeReader from 'react-barcode-reader';\n\nclass Scanner extends Component {\n  componentDidMount() {\n    Quagga.init(\n      {\n        inputStream: {\n          type: 'LiveStream',\n          constraints: {\n            width: 640,\n            height: 280,\n            // facingMode: 'auto', // or user\n          },\n        },\n        constraints: {\n          facingMode: \"environment\",\n          deviceId: \"7832475934759384534\"\n        },\n        // locator: {\n        //   patchSize: 'medium',\n        //   halfSample: true,\n        // },\n        // numOfWorkers: 4,\n        decoder: {\n          readers: ['code_128_reader'],\n        },\n        area: { // defines rectangle of the detection/localization area\n          top: \"0%\",    // top offset\n          right: \"0%\",  // right offset\n          left: \"0%\",   // left offset\n          bottom: \"0%\"  // bottom offset\n        },\n        debug: {\n          drawBoundingBox: false,\n          showFrequency: false,\n          drawScanline: false,\n          showPattern: false\n      },\n      multiple: false,\n        singleChannel: false\n        // locate: true,\n      },\n      function(err) {\n        if (err) {\n          return console.log(err)\n        }\n        Quagga.start()\n      },\n    )\n    Quagga.onDetected(this._onDetected)\n  }\n\n  componentWillUnmount() {\n    console.log('dismont scaner...')\n    Quagga.offDetected(this._onDetected);\n    Quagga.close\n  }\n\n  _onDetected = result => {\n    this.props.onDetected(result)\n  }\n\n  render() {\n    return <>\n      <div id=\"interactive\" className=\"viewport\" />\n\n      <BarcodeReader\n        onError={err=>console.log(`err`, err)}\n        onScan={err=>alert(`code `, err)}\n      />\n      </>\n  }\n}\n\nexport default Scanner"]},"metadata":{},"sourceType":"module"}