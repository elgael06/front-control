{"ast":null,"code":"import { getAllUsers, getAUserId } from \"../../api/users.api\";\nimport { loaddingOff, loaddingOn, menssageOff, menssageOn } from \"./effects.actions\";\nimport types from '../types/usuarios.type';\nexport const optenerUsuarios = () => {\n  return async dispatch => {\n    dispatch(loaddingOn());\n    dispatch({\n      type: types.REMOVE_USUARIOS\n    });\n\n    try {\n      const value = await getAllUsers();\n      dispatch(menssageOn({\n        status: true,\n        text: `Total ${value.length} usuarios...`,\n        title: '',\n        type: 'info'\n      }));\n      dispatch({\n        type: types.LISTA_USUARIOS,\n        value\n      });\n    } catch (error) {\n      dispatch(menssageOn({\n        status: true,\n        text: `Error al descargar usuarios!!!`,\n        title: '',\n        type: 'danger'\n      }));\n    }\n\n    setTimeout(() => {\n      dispatch(menssageOff());\n    }, 2000);\n    dispatch(loaddingOff());\n  };\n};\nexport const usuarioId = (id = '') => {\n  return async dispatch => {\n    dispatch(loaddingOn());\n\n    try {\n      const value = await getAUserId(id);\n      console.log('usuario id: ', value);\n\n      if (value) {\n        dispatch(menssageOn({\n          status: true,\n          text: `usuario: ${id}...`,\n          title: '',\n          type: 'info'\n        }));\n        dispatch({\n          type: types.SELECTED_USER_ID,\n          value\n        });\n      } else {\n        dispatch(menssageOn({\n          status: true,\n          text: `Error al descargar usuario!!!`,\n          title: '',\n          type: 'danger'\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n    }\n\n    setTimeout(() => {\n      dispatch(menssageOff());\n    }, 2000);\n    dispatch(loaddingOff());\n  };\n};\nexport const changeUserName = value => {\n  return dispatch => {\n    dispatch({\n      type: types.USER_NAME,\n      value\n    });\n  };\n};\nexport const changeLastName = value => {\n  return dispatch => {\n    dispatch({\n      type: types.USER_LAST_NAME,\n      value\n    });\n  };\n};\nexport const changeEmail = value => {\n  return dispatch => {\n    dispatch({\n      type: types.USER_EMAIL,\n      value\n    });\n  };\n};\nexport const changePuesto = value => {\n  return dispatch => {\n    dispatch({\n      type: types.USER_PUESTO,\n      value\n    });\n  };\n};","map":{"version":3,"sources":["/home/gael/development/base-back-end/frontend/src/redux/actions/usuarios.actions.ts"],"names":["getAllUsers","getAUserId","loaddingOff","loaddingOn","menssageOff","menssageOn","types","optenerUsuarios","dispatch","type","REMOVE_USUARIOS","value","status","text","length","title","LISTA_USUARIOS","error","setTimeout","usuarioId","id","console","log","SELECTED_USER_ID","err","changeUserName","USER_NAME","changeLastName","USER_LAST_NAME","changeEmail","USER_EMAIL","changePuesto","USER_PUESTO"],"mappings":"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","sourcesContent":["import { getAllUsers, getAUserId } from \"../../api/users.api\"\nimport { loaddingOff, loaddingOn, menssageOff, menssageOn } from \"./effects.actions\";\nimport types from '../types/usuarios.type';\n\n\nexport const optenerUsuarios = () => {\n    \n    return async (dispatch: Function) => {\n        dispatch(loaddingOn());\n        dispatch({ type: types.REMOVE_USUARIOS });\n        try {\n            const value = await getAllUsers();             \n            dispatch(menssageOn({\n                status: true,\n                text: `Total ${value.length} usuarios...`,\n                title: '',\n                type: 'info'\n            }));\n            dispatch({ type: types.LISTA_USUARIOS, value });\n        } catch(error) {\n            dispatch(menssageOn({\n                status: true,\n                text: `Error al descargar usuarios!!!`,\n                title: '',\n                type: 'danger'\n            }));\n        }\n        setTimeout(() => {        \n            dispatch(menssageOff());\n        },2000)\n        dispatch(loaddingOff());\n    }\n}\n\nexport const usuarioId = (id='') => {\n    return async (dispatch: Function) => {        \n        dispatch(loaddingOn());\n        try {\n            const value = await getAUserId(id);\n            console.log('usuario id: ',value);\n            \n            if (value) {\n                dispatch(menssageOn({\n                    status: true,\n                    text: `usuario: ${id}...`,\n                    title: '',\n                    type: 'info'\n                }));\n                dispatch({ type:types.SELECTED_USER_ID, value });\n            } else {\n                dispatch(menssageOn({\n                status: true,\n                text: `Error al descargar usuario!!!`,\n                title: '',\n                type: 'danger'\n            }));\n            }\n        } catch (err) {\n            console.error(err);        \n        }\n\n        setTimeout(() => {        \n            dispatch(menssageOff());\n        },2000)\n        dispatch(loaddingOff());\n    }\n}\n\nexport const changeUserName = (value: string) => {\n    \n    return (dispatch:Function) => {\n        dispatch({type: types.USER_NAME, value});\n    }\n}\nexport const changeLastName = (value: string) => {\n    return (dispatch:Function) => {\n        dispatch({type: types.USER_LAST_NAME, value});\n    }\n}\nexport const changeEmail = (value: string) => {\n    return (dispatch:Function) => {\n        dispatch({type: types.USER_EMAIL, value});\n    }\n}\nexport const changePuesto = (value: string) => {\n    return (dispatch:Function) => {\n        dispatch({type: types.USER_PUESTO, value});\n    }\n}\n"]},"metadata":{},"sourceType":"module"}