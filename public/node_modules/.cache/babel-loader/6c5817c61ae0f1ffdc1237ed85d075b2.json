{"ast":null,"code":"import axios from \"axios\";\nexport const getAllUsers = async (token = '') => {\n  try {\n    const {\n      data,\n      status\n    } = await axios.get('/api/v1/user', {\n      headers: {\n        'x-access-tokens': token\n      }\n    });\n    return status === 200 ? data : [];\n  } catch (err) {\n    console.error(err);\n    return [];\n  }\n};\nexport const getAUserId = async (token = '', id = '') => {\n  try {\n    const {\n      data,\n      status\n    } = await axios.get(`/api/v1/user/${id}`, {\n      headers: {\n        'x-access-tokens': token\n      }\n    });\n    return status === 200 ? data : null;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};","map":{"version":3,"sources":["/home/gael/development/base-back-end/frontend/src/api/users.api.ts"],"names":["axios","getAllUsers","token","data","status","get","headers","err","console","error","getAUserId","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,OAAOC,KAAK,GAAG,EAAf,KAAsB;AAC7C,MAAI;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMJ,KAAK,CAACK,GAAN,CAAU,cAAV,EAA0B;AAAEC,MAAAA,OAAO,EAAE;AAAE,2BAAmBJ;AAArB;AAAX,KAA1B,CAA/B;AACA,WAAOE,MAAM,KAAG,GAAT,GAAeD,IAAf,GAAsB,EAA7B;AACH,GAHD,CAGE,OAAOI,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,WAAO,EAAP;AACH;AACJ,CARM;AASP,OAAO,MAAMG,UAAU,GAAG,OAAOR,KAAK,GAAG,EAAf,EAAkBS,EAAE,GAAC,EAArB,KAA4B;AAClD,MAAI;AACA,UAAM;AAAER,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMJ,KAAK,CAACK,GAAN,CAAW,gBAAeM,EAAG,EAA7B,EAAgC;AAAEL,MAAAA,OAAO,EAAE;AAAE,2BAAmBJ;AAArB;AAAX,KAAhC,CAA/B;AACA,WAAOE,MAAM,KAAG,GAAT,GAAeD,IAAf,GAAsB,IAA7B;AACH,GAHD,CAGE,OAAOI,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,WAAO,IAAP;AACH;AACJ,CARM","sourcesContent":["import axios from \"axios\"\n\nexport const getAllUsers = async (token = '') => {\n    try {\n        const { data, status } = await axios.get('/api/v1/user', { headers: { 'x-access-tokens': token } });        \n        return status===200 ? data : [];\n    } catch (err) {\n        console.error(err);\n        return []\n    }\n}\nexport const getAUserId = async (token = '',id='') => {\n    try {\n        const { data, status } = await axios.get(`/api/v1/user/${id}`, { headers: { 'x-access-tokens': token } });        \n        return status===200 ? data : null;\n    } catch (err) {\n        console.error(err);\n        return null\n    }\n}"]},"metadata":{},"sourceType":"module"}