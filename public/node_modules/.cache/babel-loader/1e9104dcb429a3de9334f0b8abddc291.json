{"ast":null,"code":"var _jsxFileName = \"/home/gael/development/base-back-end/frontend/src/components/util/Scanner.jsx\";\nimport React, { Component } from 'react';\nimport Quagga from 'quagga';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Scanner extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this._onDetected = result => {\n      this.props.onDetected(result);\n    };\n  }\n\n  componentDidMount() {\n    Quagga.init({\n      inputStream: {\n        type: 'LiveStream',\n        constraints: {\n          width: 640,\n          height: 120 // facingMode: 'auto', // or user\n\n        }\n      },\n      constraints: {\n        facingMode: \"environment\",\n        deviceId: \"7832475934759384534\"\n      },\n      // locator: {\n      //   patchSize: 'medium',\n      //   halfSample: true,\n      // },\n      // numOfWorkers: 4,\n      decoder: {\n        readers: ['code_128_reader']\n      },\n      area: {\n        // defines rectangle of the detection/localization area\n        top: \"0%\",\n        // top offset\n        right: \"0%\",\n        // right offset\n        left: \"0%\",\n        // left offset\n        bottom: \"0%\" // bottom offset\n\n      },\n      debug: {\n        drawBoundingBox: false,\n        showFrequency: false,\n        drawScanline: false,\n        showPattern: false\n      },\n      multiple: false,\n      singleChannel: false // locate: true,\n\n    }, function (err) {\n      if (err) {\n        return console.log(err);\n      }\n\n      Quagga.start();\n    });\n    Quagga.onDetected(this._onDetected);\n  }\n\n  componentWillUnmount() {\n    Quagga.offDetected(this._onDetected);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"interactive\",\n      className: \"viewport\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Scanner;","map":{"version":3,"sources":["/home/gael/development/base-back-end/frontend/src/components/util/Scanner.jsx"],"names":["React","Component","Quagga","Scanner","_onDetected","result","props","onDetected","componentDidMount","init","inputStream","type","constraints","width","height","facingMode","deviceId","decoder","readers","area","top","right","left","bottom","debug","drawBoundingBox","showFrequency","drawScanline","showPattern","multiple","singleChannel","err","console","log","start","componentWillUnmount","offDetected","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAsD9BG,WAtD8B,GAsDhBC,MAAM,IAAI;AACtB,WAAKC,KAAL,CAAWC,UAAX,CAAsBF,MAAtB;AACD,KAxD6B;AAAA;;AAC9BG,EAAAA,iBAAiB,GAAG;AAClBN,IAAAA,MAAM,CAACO,IAAP,CACE;AACEC,MAAAA,WAAW,EAAE;AACXC,QAAAA,IAAI,EAAE,YADK;AAEXC,QAAAA,WAAW,EAAE;AACXC,UAAAA,KAAK,EAAE,GADI;AAEXC,UAAAA,MAAM,EAAE,GAFG,CAGX;;AAHW;AAFF,OADf;AASEF,MAAAA,WAAW,EAAE;AACXG,QAAAA,UAAU,EAAE,aADD;AAEXC,QAAAA,QAAQ,EAAE;AAFC,OATf;AAaE;AACA;AACA;AACA;AACA;AACAC,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE,CAAC,iBAAD;AADF,OAlBX;AAqBEC,MAAAA,IAAI,EAAE;AAAE;AACNC,QAAAA,GAAG,EAAE,IADD;AACU;AACdC,QAAAA,KAAK,EAAE,IAFH;AAEU;AACdC,QAAAA,IAAI,EAAE,IAHF;AAGU;AACdC,QAAAA,MAAM,EAAE,IAJJ,CAIU;;AAJV,OArBR;AA2BGC,MAAAA,KAAK,EAAE;AACNC,QAAAA,eAAe,EAAE,KADX;AAENC,QAAAA,aAAa,EAAE,KAFT;AAGNC,QAAAA,YAAY,EAAE,KAHR;AAINC,QAAAA,WAAW,EAAE;AAJP,OA3BV;AAiCAC,MAAAA,QAAQ,EAAE,KAjCV;AAkCEC,MAAAA,aAAa,EAAE,KAlCjB,CAmCE;;AAnCF,KADF,EAsCE,UAASC,GAAT,EAAc;AACZ,UAAIA,GAAJ,EAAS;AACP,eAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AACD;;AACD7B,MAAAA,MAAM,CAACgC,KAAP;AACD,KA3CH;AA6CAhC,IAAAA,MAAM,CAACK,UAAP,CAAkB,KAAKH,WAAvB;AACD;;AAED+B,EAAAA,oBAAoB,GAAG;AACrBjC,IAAAA,MAAM,CAACkC,WAAP,CAAmB,KAAKhC,WAAxB;AACD;;AAMDiC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA5D6B;;AA+DhC,eAAelC,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport Quagga from 'quagga'\n\nclass Scanner extends Component {\n  componentDidMount() {\n    Quagga.init(\n      {\n        inputStream: {\n          type: 'LiveStream',\n          constraints: {\n            width: 640,\n            height: 120,\n            // facingMode: 'auto', // or user\n          },\n        },\n        constraints: {\n          facingMode: \"environment\",\n          deviceId: \"7832475934759384534\"\n        },\n        // locator: {\n        //   patchSize: 'medium',\n        //   halfSample: true,\n        // },\n        // numOfWorkers: 4,\n        decoder: {\n          readers: ['code_128_reader'],\n        },\n        area: { // defines rectangle of the detection/localization area\n          top: \"0%\",    // top offset\n          right: \"0%\",  // right offset\n          left: \"0%\",   // left offset\n          bottom: \"0%\"  // bottom offset\n        },\n         debug: {\n          drawBoundingBox: false,\n          showFrequency: false,\n          drawScanline: false,\n          showPattern: false\n      },\n      multiple: false,\n        singleChannel: false\n        // locate: true,\n      },\n      function(err) {\n        if (err) {\n          return console.log(err)\n        }\n        Quagga.start()\n      },\n    )\n    Quagga.onDetected(this._onDetected)\n  }\n\n  componentWillUnmount() {\n    Quagga.offDetected(this._onDetected)\n  }\n\n  _onDetected = result => {\n    this.props.onDetected(result)\n  }\n\n  render() {\n    return <div id=\"interactive\" className=\"viewport\" />\n  }\n}\n\nexport default Scanner"]},"metadata":{},"sourceType":"module"}