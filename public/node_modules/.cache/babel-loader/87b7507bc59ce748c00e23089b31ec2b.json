{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2013 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // package com.google.zxing.pdf417.decoder;\n\n/**\n * @author Guenther Grau\n */\n\nvar Codeword =\n/** @class */\nfunction () {\n  function Codeword(startX, endX, bucket, value) {\n    this.rowNumber = Codeword.BARCODE_ROW_UNKNOWN;\n    this.startX = Math.trunc(startX);\n    this.endX = Math.trunc(endX);\n    this.bucket = Math.trunc(bucket);\n    this.value = Math.trunc(value);\n  }\n\n  Codeword.prototype.hasValidRowNumber = function () {\n    return this.isValidRowNumber(this.rowNumber);\n  };\n\n  Codeword.prototype.isValidRowNumber = function (rowNumber) {\n    return rowNumber !== Codeword.BARCODE_ROW_UNKNOWN && this.bucket === rowNumber % 3 * 3;\n  };\n\n  Codeword.prototype.setRowNumberAsRowIndicatorColumn = function () {\n    this.rowNumber = Math.trunc(Math.trunc(this.value / 30) * 3 + Math.trunc(this.bucket / 3));\n  };\n\n  Codeword.prototype.getWidth = function () {\n    return this.endX - this.startX;\n  };\n\n  Codeword.prototype.getStartX = function () {\n    return this.startX;\n  };\n\n  Codeword.prototype.getEndX = function () {\n    return this.endX;\n  };\n\n  Codeword.prototype.getBucket = function () {\n    return this.bucket;\n  };\n\n  Codeword.prototype.getValue = function () {\n    return this.value;\n  };\n\n  Codeword.prototype.getRowNumber = function () {\n    return this.rowNumber;\n  };\n\n  Codeword.prototype.setRowNumber = function (rowNumber) {\n    this.rowNumber = rowNumber;\n  }; //   @Override\n\n\n  Codeword.prototype.toString = function () {\n    return this.rowNumber + '|' + this.value;\n  };\n\n  Codeword.BARCODE_ROW_UNKNOWN = -1;\n  return Codeword;\n}();\n\nexports.default = Codeword;","map":{"version":3,"sources":["../../../../src/core/pdf417/decoder/Codeword.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;IAIH;;AAEA;;AAEG;;AACH,IAAA,QAAA;AAAA;AAAA,YAAA;AAUE,WAAA,QAAA,CAAY,MAAZ,EAAyB,IAAzB,EAAoC,MAApC,EAAiD,KAAjD,EAA2D;AAFnD,SAAA,SAAA,GAAiB,QAAQ,CAAC,mBAA1B;AAGN,SAAK,MAAL,GAAc,IAAI,CAAC,KAAL,CAAW,MAAX,CAAd;AACA,SAAK,IAAL,GAAY,IAAI,CAAC,KAAL,CAAW,IAAX,CAAZ;AACA,SAAK,MAAL,GAAc,IAAI,CAAC,KAAL,CAAW,MAAX,CAAd;AACA,SAAK,KAAL,GAAa,IAAI,CAAC,KAAL,CAAW,KAAX,CAAb;AACD;;AAED,EAAA,QAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,YAAA;AACE,WAAO,KAAK,gBAAL,CAAsB,KAAK,SAA3B,CAAP;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,SAAjB,EAA+B;AAC7B,WAAO,SAAS,KAAK,QAAQ,CAAC,mBAAvB,IAA8C,KAAK,MAAL,KAAiB,SAAS,GAAG,CAAb,GAAkB,CAAvF;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,gCAAA,GAAA,YAAA;AACE,SAAK,SAAL,GAAiB,IAAI,CAAC,KAAL,CAAY,IAAI,CAAC,KAAL,CAAW,KAAK,KAAL,GAAa,EAAxB,CAAD,GAAgC,CAAhC,GAAoC,IAAI,CAAC,KAAL,CAAW,KAAK,MAAL,GAAc,CAAzB,CAA/C,CAAjB;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,WAAO,KAAK,IAAL,GAAY,KAAK,MAAxB;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACE,WAAO,KAAK,MAAZ;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,WAAO,KAAK,IAAZ;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACE,WAAO,KAAK,MAAZ;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,WAAO,KAAK,KAAZ;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACE,WAAO,KAAK,SAAZ;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,SAAb,EAA2B;AACzB,SAAK,SAAL,GAAiB,SAAjB;AACD,GAFD,CArDF,CAyDA;;;AACU,EAAA,QAAA,CAAA,SAAA,CAAA,QAAA,GAAR,YAAA;AACE,WAAO,KAAK,SAAL,GAAiB,GAAjB,GAAuB,KAAK,KAAnC;AACD,GAFO;;AAxDiB,EAAA,QAAA,CAAA,mBAAA,GAA2B,CAAC,CAA5B;AA4D3B,SAAA,QAAA;AAAC,CA9DD,EAAA;;kBAA+B,Q","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2013 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// package com.google.zxing.pdf417.decoder;\n/**\n * @author Guenther Grau\n */\nvar Codeword = /** @class */ (function () {\n    function Codeword(startX, endX, bucket, value) {\n        this.rowNumber = Codeword.BARCODE_ROW_UNKNOWN;\n        this.startX = Math.trunc(startX);\n        this.endX = Math.trunc(endX);\n        this.bucket = Math.trunc(bucket);\n        this.value = Math.trunc(value);\n    }\n    Codeword.prototype.hasValidRowNumber = function () {\n        return this.isValidRowNumber(this.rowNumber);\n    };\n    Codeword.prototype.isValidRowNumber = function (rowNumber) {\n        return rowNumber !== Codeword.BARCODE_ROW_UNKNOWN && this.bucket === (rowNumber % 3) * 3;\n    };\n    Codeword.prototype.setRowNumberAsRowIndicatorColumn = function () {\n        this.rowNumber = Math.trunc((Math.trunc(this.value / 30)) * 3 + Math.trunc(this.bucket / 3));\n    };\n    Codeword.prototype.getWidth = function () {\n        return this.endX - this.startX;\n    };\n    Codeword.prototype.getStartX = function () {\n        return this.startX;\n    };\n    Codeword.prototype.getEndX = function () {\n        return this.endX;\n    };\n    Codeword.prototype.getBucket = function () {\n        return this.bucket;\n    };\n    Codeword.prototype.getValue = function () {\n        return this.value;\n    };\n    Codeword.prototype.getRowNumber = function () {\n        return this.rowNumber;\n    };\n    Codeword.prototype.setRowNumber = function (rowNumber) {\n        this.rowNumber = rowNumber;\n    };\n    //   @Override\n    Codeword.prototype.toString = function () {\n        return this.rowNumber + '|' + this.value;\n    };\n    Codeword.BARCODE_ROW_UNKNOWN = -1;\n    return Codeword;\n}());\nexports.default = Codeword;\n//# sourceMappingURL=Codeword.js.map"]},"metadata":{},"sourceType":"script"}